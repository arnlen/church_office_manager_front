"use strict";var app=angular.module("churchOfficeManagerFrontApp",["ngResource","ngAnimate"]);app.controller("OfficesController",["$scope","officesFactory","servicesFactory",function(a,b,c){var d=function(){b.get().$promise.then(function(b){a.office=b.offices[0],e()})},e=function(){c.get_office_services({officeId:a.office.id}).$promise.then(function(b){a.services=b})};d(),a.selectService=function(b){a.selectedService=b},a.refreshService=function(b){var c=!1;angular.forEach(a.services,function(a){c||a.id!=b.id||(c=!0,a.task_done=b.task_done,a.ready=b.ready)})}}]),app.controller("ServicesController",["$scope","servicesFactory","membersFactory",function(a,b,c){var d=function(){b.get({id:a.selectedService.id}).$promise.then(function(b){a.loadedService=b,a.servicePanelOpen=!0,a.selectService(!1)})};a.unloadService=function(){a.loadedService=!1,console.log("Service unloaded.")},a.$watch("selectedService",function(){a.selectedService&&a.openServicePanel()}),a.openServicePanel=function(){d(),a.bodyNotScrollable()},a.closeServicePanel=function(){a.servicePanelOpen=!1,a.memberListOpen=!1,a.memberToConfirm=!1,console.log("Closing panel..."),a.bodyScrollable()},a.closeAllPanels=function(){a.closeServicePanel()},a.toggleMemberList=function(){a.members?a.memberListOpen=!a.memberListOpen:c.query().$promise.then(function(b){a.members=b,a.memberListOpen=!a.memberListOpen})},a.confirmMemberInCharge=function(b){a.memberToConfirm=b},a.updateMemberInCharge=function(b){a.loadedService.member_in_charge_id=b.id,a.loadedService.$update(),a.memberListOpen=!1,a.memberToConfirm=!1}}]),app.controller("TasksController",["$scope","tasksFactory",function(a,b){a.loadTasks=function(c){b.get_service_tasks({serviceId:c}).$promise.then(function(b){a.tasks=b})},a.$watch("selectedService",function(){a.selectedService&&a.loadTasks(a.selectedService.id)}),a.updateTask=function(b){b.$update().then(function(){a.loadedService.$get().then(function(){a.refreshService(a.loadedService)})})}}]),app.controller("MembersController",["$scope","membersFactory",function(){}]),app.controller("BodyController",["$scope",function(a){a.bodyScrollable=function(){a.bodyNoScroll=!1},a.bodyNotScrollable=function(){a.bodyNoScroll=!0}}]),app.factory("officesFactory",["$resource",function(a){return a("http://localhost:3000/offices/next/1")}]),app.factory("tasksFactory",["$resource",function(a){var b=a("http://localhost:3000/tasks/:id",{id:"@id"},{update:{method:"PUT"},get_service_tasks:{method:"GET",params:{serviceId:"@serviceId"},isArray:!0}});return b}]),app.factory("servicesFactory",["$resource",function(a){var b=a("http://localhost:3000/services/:id",{id:"@id"},{update:{method:"PUT"},get_office_services:{method:"GET",params:{officeId:"@officeId"},isArray:!0}});return b}]),app.factory("membersFactory",["$resource",function(a){var b=a("http://localhost:3000/members/:id");return b}]),app.directive("chCapitalize",function(){return{restrict:"A",scope:{name:"@"},template:"{{ name[0].toUpperCase() }}{{ name.slice(1) }}"}}),app.directive("chAfterTransition",function(){return{restrict:"A",link:function(a,b){b[0].addEventListener("transitionend",function(b){"right"!==b.propertyName||a.servicePanelOpen||a.unloadService()})}}});